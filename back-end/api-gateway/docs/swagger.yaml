basePath: /
definitions:
  models.CommentRequest:
    properties:
      comment:
        type: string
      postId:
        type: string
      userId:
        type: string
    type: object
  models.LikeRequest:
    properties:
      postId:
        type: string
      userId:
        type: string
    type: object
  models.LoginResp:
    properties:
      ExpiresIn:
        type: integer
      Token:
        type: string
      Type:
        type: string
      User:
        $ref: '#/definitions/models.LoginUserResp'
    type: object
  models.LoginUserResp:
    properties:
      Email:
        type: string
      FullName:
        type: string
      ID:
        type: string
      ProfilePicture:
        type: string
    type: object
  models.PostMedia:
    properties:
      postId:
        type: string
      type:
        type: string
      url:
        type: string
    type: object
  models.PostResp:
    properties:
      comments:
        type: integer
      content:
        type: string
      createdAt:
        type: string
      likes:
        type: integer
      media:
        items:
          $ref: '#/definitions/models.PostMedia'
        type: array
      postId:
        type: string
      shares:
        type: integer
      userId:
        $ref: '#/definitions/models.Users'
    type: object
  models.ResponseDataType:
    properties:
      data: {}
      message:
        type: string
      statusCode:
        type: integer
    type: object
  models.SwaggerLikeResp:
    properties:
      data:
        type: boolean
      message:
        type: string
      statusCode:
        type: integer
    type: object
  models.SwaggerLoginReq:
    properties:
      BirthDate:
        type: string
      Description:
        type: string
      Email:
        type: string
      FirstName:
        type: string
      Location:
        type: string
      Password:
        type: string
      SurName:
        type: string
      UserName:
        type: string
      Website:
        items:
          type: string
        type: array
    type: object
  models.SwaggerLoginResp:
    properties:
      data:
        $ref: '#/definitions/models.LoginResp'
      message:
        type: string
      statusCode:
        type: integer
    type: object
  models.SwaggerPostReq:
    properties:
      content:
        type: string
      userId:
        type: string
    type: object
  models.SwaggerPostResp:
    properties:
      data:
        items:
          $ref: '#/definitions/models.PostResp'
        type: array
      message:
        type: string
      statusCode:
        type: integer
    type: object
  models.Users:
    properties:
      ID:
        type: string
      fullName:
        type: string
      profilePicture:
        type: string
    type: object
info:
  contact: {}
  description: This is an API Gateway Server.
  title: Swagger Social Media CRUD API
  version: "1.0"
paths:
  /api/v1/interact/add-comment:
    post:
      consumes:
      - application/json
      description: Add Comment with request and token
      parameters:
      - description: Comment Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseDataType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseDataType'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseDataType'
      summary: Add Comment
      tags:
      - interact
  /api/v1/interact/add-like:
    post:
      consumes:
      - application/json
      description: Add Like with request and token
      parameters:
      - description: Like Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LikeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseDataType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseDataType'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseDataType'
      summary: Add Like
      tags:
      - interact
  /api/v1/interact/check-like:
    post:
      consumes:
      - application/json
      description: Check Like with request and token
      parameters:
      - description: Like Check Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LikeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerLikeResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseDataType'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseDataType'
      summary: Check Like
      tags:
      - interact
  /api/v1/interact/delete-comment:
    delete:
      consumes:
      - application/json
      description: Delete Comment with request and token
      parameters:
      - description: Id Request
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseDataType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseDataType'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseDataType'
      summary: Delete Comment
      tags:
      - interact
  /api/v1/interact/delete-like:
    delete:
      consumes:
      - application/json
      description: Delete Like with request and token
      parameters:
      - description: Like Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LikeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseDataType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseDataType'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseDataType'
      summary: Delete Like
      tags:
      - interact
  /api/v1/post/add-post:
    post:
      consumes:
      - application/json
      description: Add Post with request and token
      parameters:
      - description: Add Post Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SwaggerPostReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseDataType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseDataType'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseDataType'
      summary: Add Post
      tags:
      - post
  /api/v1/post/delete-post:
    delete:
      consumes:
      - application/json
      description: Delete Post with request and token
      parameters:
      - description: User Id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseDataType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseDataType'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseDataType'
      summary: Delete Post
      tags:
      - post
  /api/v1/post/get-post:
    get:
      consumes:
      - application/json
      description: Get Post without request
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerPostResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseDataType'
      summary: Get Post
      tags:
      - post
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login with username and password
      parameters:
      - description: User Name
        in: query
        name: userName
        required: true
        type: string
      - description: Password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SwaggerLoginResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseDataType'
      summary: Login User
      tags:
      - authentication
  /auth/refresh-token:
    post:
      consumes:
      - application/json
      description: Refresh Token API
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseDataType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseDataType'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseDataType'
      summary: Refresh Token
      tags:
      - authentication
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register User Account
      parameters:
      - description: Register Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SwaggerLoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseDataType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseDataType'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseDataType'
      summary: Register Account
      tags:
      - authentication
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
